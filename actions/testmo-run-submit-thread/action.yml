---
name: submit results to testmo run
description: asynchronously submit step results to neuralmagic testmo run

inputs:
  testmo_url:
    description: testmo URL
    required: true
  testmo_token:
    description: testmo token
    required: true
  testmo_run_id:
    description: testmo run id
    required: true
  results:
    description: directory of JUnit '*.xml' formatted result files
    required: true
  thread_resources:
    description: JSON file with TestMo resources to attach to this thread
    default: ''
    required: false
  step_status:
    description: status of reported step
    required: true

outputs:
  status:
    description: status of updating testmo. if there was no update, then 'success' is returned.
    value: ${{ steps.submit_thread.outputs.status }}

runs:
  using: composite
  steps:
    - name: install Testmo CLI tool
      uses: neuralmagic/nm-actions/actions/install-testmo@testmo-bugfix-test

    - name: add scripts folder to PATH
      run: echo "${{ github.action_path }}/../../scripts" >> $GITHUB_PATH
      shell: bash

    - id: submit_thread
      run: |
        # verify results folder exists
        if [[ ! -d "$RESULTS_FOLDER" ]]; then
          echo "Results folder '$RESULTS_FOLDER' does not exist in working directory:"
          ls -A
          echo "::warning title=$GITHUB_JOB - MISSING RESULTS FOLDER::Results folder does not exist in working directory"
          exit 1
        fi

        # verify results folder contains XML result files
        readarray -d '' RESULTS < <(find "$RESULTS_FOLDER" -type f -name "*.xml" -print0)
        if [[ ${#RESULTS[@]} == 0 ]]; then
          echo "Results folder '$RESULTS_FOLDER' does not contain any XML result files:"
          ls -A "$RESULTS_FOLDER"
          echo "::warning title=$GITHUB_JOB - MISSING RESULT FILES::Results folder did not contain any XML result files"
          exit 1
        fi

        # generate resources file if necessary
        if [[ -f "$THREAD_RESOURCES" ]]; then
          thread_resources=$THREAD_RESOURCES
        else
          echo '{}' > thread_resources.json
          thread_resources=thread_resources.json
        fi

        # submit results
        SUCCESS=0
        echo "submitting results to TESTMO run ..."
        npx testmo automation:run:submit-thread \
          --instance "$TESTMO_URL" \
          --run-id "$TESTMO_RUN_ID" \
          --results "${RESULTS[@]}" \
          --thread-resources "$thread_resources" \
          -- step-status.sh "$STEP_STATUS" || SUCCESS=$?

        echo "status=$SUCCESS" >> "$GITHUB_OUTPUT"
        exit "$SUCCESS"
      env:
        TESTMO_URL: ${{ inputs.testmo_url }}
        TESTMO_TOKEN: ${{ inputs.testmo_token }}
        TESTMO_RUN_ID: ${{ inputs.testmo_run_id }}
        RESULTS_FOLDER: ${{ inputs.results }}
        THREAD_RESOURCES: ${{ inputs.thread_resources }}
        STEP_STATUS: ${{ inputs.step_status }}
      shell: bash
