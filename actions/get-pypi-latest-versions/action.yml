---
name: get package latest versions on PyPi
description: get package latest versions on PyPi

inputs:
  package_name:
    description: name of the package
    required: true
  num_of_latest:
    description: number of latest versions
    default: '1'

outputs:
  versions:
    description: return latest versions (separated by ;) of package on PyPi
    value: ${{ steps.getpypi.outputs.versions }}

runs:
  using: composite
  steps:
    - name: get package versions from pypi
      id: getpypi
      shell: bash
      run: |-
        echo "::group::get-pypi-latest-versions - preparing virtual environment"
        VENV_NAME="venv-pypi-versions"
        python -m venv "$VENV_NAME"
        source "$VENV_NAME/bin/activate"
        pip install requests rss-parser
        echo "::endgroup::"

        echo "get-pypi-latest-versions - getting latest '$NUM_VERSIONS' version(s) of '$PACKAGE_NAME'"
        versions=$(python "$ACTION_PATH/get-versions.py" "$PACKAGE_NAME" --num_versions "$NUM_VERSIONS")
        echo "... result: $versions"

        echo "get-pypi-latest-versions - cleaning up virtual environment"
        rm -r "$VENV_NAME"

        if [ -z "$versions" ]; then
          exit 1
        fi

        echo "versions=$versions" >> $GITHUB_OUTPUT
      env:
        PACKAGE_NAME: ${{ inputs.package_name }}
        NUM_VERSIONS: ${{ inputs.num_of_latest || "1" }}
        ACTION_PATH: ${{ github.action_path }}
